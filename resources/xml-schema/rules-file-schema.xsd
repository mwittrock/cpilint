<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1">

	<xs:element name="cpilint">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="imports" type="importsType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="rules" type="rulesType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="extension-rules" type="extensionRulesType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="exemptions" type="exemptionsType" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
			<!-- The document can contain any combination of imports, rules, extension rules and exemptions, but at least one of them must be present. -->
			<xs:assert test="imports or rules or extension-rules or exemptions"/>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="importsType">
		<xs:sequence>
			<xs:element name="import" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="src" use="required" type="nonEmptyString"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="rulesType">
		<xs:all>
			<xs:element name="cleartext-basic-auth-not-allowed" type="baseRuleType" minOccurs="0"/>
			<xs:element name="matching-process-direct-channels-required" type="baseRuleType" minOccurs="0"/>
			<xs:element name="multi-condition-type-routers-not-allowed" type="baseRuleType" minOccurs="0"/>
			<xs:element name="allowed-receiver-adapters" type="allowedReceiverAdaptersType" minOccurs="0"/>
			<xs:element name="disallowed-receiver-adapters" type="disallowedReceiverAdaptersType" minOccurs="0"/>
			<xs:element name="allowed-scripting-languages" type="allowedScriptingLanguagesType" minOccurs="0"/>
			<xs:element name="disallowed-scripting-languages" type="disallowedScriptingLanguagesType" minOccurs="0"/>
			<xs:element name="allowed-sender-adapters" type="allowedSenderAdaptersType" minOccurs="0"/>
			<xs:element name="disallowed-sender-adapters" type="disallowedSenderAdaptersType" minOccurs="0"/>
			<xs:element name="unencrypted-data-store-write-not-allowed" type="baseRuleType" minOccurs="0"/>
			<xs:element name="unencrypted-endpoints-not-allowed" type="baseRuleType" minOccurs="0"/>
			<xs:element name="allowed-xslt-versions" type="allowedXsltVersionsType" minOccurs="0"/>
			<xs:element name="disallowed-xslt-versions" type="disallowedXsltVersionsType" minOccurs="0"/>
			<xs:element name="client-cert-sender-channel-auth-not-allowed" type="baseRuleType" minOccurs="0"/>
			<xs:element name="csrf-protection-required" type="baseRuleType" minOccurs="0"/>
			<xs:element name="allowed-mapping-types" type="allowedMappingTypesType" minOccurs="0"/>
			<xs:element name="disallowed-mapping-types" type="disallowedMappingTypesType" minOccurs="0"/>
			<xs:element name="allowed-java-archives" type="allowedJavaArchivesType" minOccurs="0"/>
			<xs:element name="disallowed-java-archives" type="disallowedJavaArchivesType" minOccurs="0"/>
			<xs:element name="iflow-description-required" type="baseRuleType" minOccurs="0"/>
			<xs:element name="duplicate-resources-not-allowed" type="duplicateResourcesType" minOccurs="0"/>
			<xs:element name="naming" type="namingType" minOccurs="0" maxOccurs="unbounded"/> <!-- Unlike the other rules, the naming rule can occur multiple times. -->
			<xs:element name="allowed-user-roles" type="allowedUserRolesType" minOccurs="0"/>
			<xs:element name="disallowed-user-roles" type="disallowedUserRolesType" minOccurs="0"/>
		</xs:all>
		<!-- At least one rule must be present. -->
		<xs:assert test="count(*) gt 0"/>
		<!-- For the allow/disallow rules, only one of the variations must be present. -->
		<xs:assert test="not(allowed-receiver-adapters and disallowed-receiver-adapters)"/>
		<xs:assert test="not(allowed-scripting-languages and disallowed-scripting-languages)"/>
		<xs:assert test="not(allowed-sender-adapters and disallowed-sender-adapters)"/>
		<xs:assert test="not(allowed-xslt-versions and disallowed-xslt-versions)"/>
		<xs:assert test="not(allowed-mapping-types and disallowed-mapping-types)"/>
		<xs:assert test="not(allowed-java-archives and disallowed-java-archives)"/>
		<xs:assert test="not(allowed-user-roles and disallowed-user-roles)"/>
	</xs:complexType>

	<!-- If the extension-rules element is present, it must contain at least one element. However, these child elements are not validated further; hence the <xs:any> with processContents="skip". -->
	<xs:complexType name="extensionRulesType">
		<xs:sequence>
			<!-- All extension rule elements must belong to a namespace; hence the namespace="##other". -->
			<xs:any minOccurs="1" maxOccurs="unbounded" processContents="skip" namespace="##other"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="exemptionsType">
		<xs:sequence>
			<xs:element name="exemption" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="rule-id" type="nonEmptyString"/>
						<xs:element name="iflow-id" type="nonEmptyString" maxOccurs="unbounded"/>
						<xs:element name="reason" type="nonEmptyString"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<!-- General types -->

	<xs:complexType name="baseRuleType">
		<xs:attribute name="id" use="optional" type="nonEmptyString"/>
	</xs:complexType>

	<xs:simpleType name="nonEmptyString">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- Types for rule ReceiverAdapters -->

	<xs:simpleType name="receiverAdaptersType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="advancedeventmesh"/>
			<xs:enumeration value="amazondynamodb"/>
			<xs:enumeration value="amazoneventbridge"/>
			<xs:enumeration value="amqp"/>
			<xs:enumeration value="anaplan"/>
			<xs:enumeration value="ariba"/>
			<xs:enumeration value="as2"/>
			<xs:enumeration value="as4"/>
			<xs:enumeration value="azurecosmosdb"/>
			<xs:enumeration value="azurestorage"/>
			<xs:enumeration value="coupa"/>
			<xs:enumeration value="dropbox"/>
			<xs:enumeration value="elster"/>
			<xs:enumeration value="facebook"/>
			<xs:enumeration value="ftp"/>
			<xs:enumeration value="hubspot"/>
			<xs:enumeration value="odata"/>
			<xs:enumeration value="http"/>
			<xs:enumeration value="ibmmq"/>
			<xs:enumeration value="idoc"/>
			<xs:enumeration value="jdbc"/>
			<xs:enumeration value="jira"/>
			<xs:enumeration value="jms"/>
			<xs:enumeration value="kafka"/>
			<xs:enumeration value="ldap"/>
			<xs:enumeration value="mail"/>
			<xs:enumeration value="mdi"/>
			<xs:enumeration value="microsoft sharepoint"/>
			<xs:enumeration value="netsuite"/>
			<xs:enumeration value="odc"/>
			<xs:enumeration value="openconnectors"/>
			<xs:enumeration value="processdirect"/>
			<xs:enumeration value="rabbitmq"/>
			<xs:enumeration value="rfc"/>
			<xs:enumeration value="servicenow"/>
			<xs:enumeration value="sftp"/>
			<xs:enumeration value="slack"/>
			<xs:enumeration value="smb"/>
			<xs:enumeration value="snowflake"/>
			<xs:enumeration value="soap"/>
			<xs:enumeration value="splunk"/>
			<xs:enumeration value="successfactors"/>
			<xs:enumeration value="sugarcrm"/>
			<xs:enumeration value="twitter"/>
			<xs:enumeration value="workday"/>
			<xs:enumeration value="xi"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="allowedReceiverAdaptersType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="allow" type="receiverAdaptersType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="disallowedReceiverAdaptersType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="disallow" type="receiverAdaptersType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Types for rule ScriptingLanguages -->

	<xs:simpleType name="scriptingLanguagesType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="groovy"/>
			<xs:enumeration value="javascript"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="allowedScriptingLanguagesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="allow" type="scriptingLanguagesType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="disallowedScriptingLanguagesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="disallow" type="scriptingLanguagesType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Types for rule SenderAdapters -->

	<xs:simpleType name="senderAdaptersType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="advancedeventmesh"/>
			<xs:enumeration value="amqp"/>
			<xs:enumeration value="ariba"/>
			<xs:enumeration value="as2"/>
			<xs:enumeration value="as4"/>
			<xs:enumeration value="azurestorage"/>
			<xs:enumeration value="data store"/>
			<xs:enumeration value="dropbox"/>
			<xs:enumeration value="ftp"/>
			<xs:enumeration value="https"/>
			<xs:enumeration value="ibmmq"/>
			<xs:enumeration value="idoc"/>
			<xs:enumeration value="jms"/>
			<xs:enumeration value="kafka"/>
			<xs:enumeration value="mail"/>
			<xs:enumeration value="microsoft sharepoint"/>
			<xs:enumeration value="odata"/>
			<xs:enumeration value="processdirect"/>
			<xs:enumeration value="rabbitmq"/>
			<xs:enumeration value="sftp"/>
			<xs:enumeration value="slack"/>
			<xs:enumeration value="smb"/>
			<xs:enumeration value="soap"/>
			<xs:enumeration value="splunk"/>
			<xs:enumeration value="successfactors"/>
			<xs:enumeration value="xi"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="allowedSenderAdaptersType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="allow" type="senderAdaptersType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="disallowedSenderAdaptersType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="disallow" type="senderAdaptersType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Types for rule XsltVersions -->

	<xs:simpleType name="xsltVersionsType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="1.0"/>
			<xs:enumeration value="2.0"/>
			<xs:enumeration value="3.0"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="allowedXsltVersionsType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="allow" type="xsltVersionsType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="disallowedXsltVersionsType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="disallow" type="xsltVersionsType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Types for rule MappingTypes -->

	<xs:simpleType name="mappingTypesType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="message-mapping"/>
			<xs:enumeration value="operation-mapping"/>
			<xs:enumeration value="xslt-mapping"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="allowedMappingTypesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="allow" type="mappingTypesType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="disallowedMappingTypesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="disallow" type="mappingTypesType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Types for rule JavaArchives -->

	<xs:complexType name="allowedJavaArchivesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="allow" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="disallowedJavaArchivesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="disallow" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Types for rule DuplicateResourcesNotAllowed -->

	<xs:simpleType name="resourcesType">
			<xs:restriction base="xs:string">
				<xs:enumeration value="message-mapping"/>
				<xs:enumeration value="xslt-mapping"/>
				<xs:enumeration value="operation-mapping"/>
				<xs:enumeration value="javascript-script"/>
				<xs:enumeration value="groovy-script"/>
				<xs:enumeration value="java-archive"/>
				<xs:enumeration value="edmx"/>
				<xs:enumeration value="wsdl"/>
				<xs:enumeration value="xml-schema"/>
				<xs:enumeration value="json"/>
			</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="duplicateResourcesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="0" maxOccurs="unbounded">
					<xs:element name="resource-type" type="resourcesType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Types for rule Naming -->
	
	<xs:complexType name="namingType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence>
					<xs:element name="scheme" type="schemeTypeSingle"/>
					<xs:element name="message" type="xs:string"/>
					<xs:element name="apply-to" type="nameableType" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:simpleType name="nameableType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="iflow.name"/>
			<xs:enumeration value="iflow.id"/>
			<xs:enumeration value="channel.name"/>
			<xs:enumeration value="sender-channel.name"/>
			<xs:enumeration value="advancedeventmesh-sender-channel.name"/>
			<xs:enumeration value="amqp-sender-channel.name"/>
			<xs:enumeration value="ariba-sender-channel.name"/>
			<xs:enumeration value="as2-sender-channel.name"/>
			<xs:enumeration value="as4-sender-channel.name"/>
			<xs:enumeration value="azurestorage-sender-channel.name"/>
			<xs:enumeration value="data-store-sender-channel.name"/>
			<xs:enumeration value="dropbox-sender-channel.name"/>
			<xs:enumeration value="ftp-sender-channel.name"/>
			<xs:enumeration value="https-sender-channel.name"/>
			<xs:enumeration value="idoc-sender-channel.name"/>
			<xs:enumeration value="jms-sender-channel.name"/>
			<xs:enumeration value="kafka-sender-channel.name"/>
			<xs:enumeration value="mail-sender-channel.name"/>
			<xs:enumeration value="microsoft-sharepoint-sender-channel.name"/>
			<xs:enumeration value="odata-sender-channel.name"/>
			<xs:enumeration value="processdirect-sender-channel.name"/>
			<xs:enumeration value="rabbitmq-sender-channel.name"/>
			<xs:enumeration value="sftp-sender-channel.name"/>
			<xs:enumeration value="slack-sender-channel.name"/>
			<xs:enumeration value="smb-sender-channel.name"/>
			<xs:enumeration value="soap-sender-channel.name"/>
			<xs:enumeration value="splunk-sender-channel.name"/>
			<xs:enumeration value="successfactors-sender-channel.name"/>
			<xs:enumeration value="xi-sender-channel.name"/>
			<xs:enumeration value="receiver-channel.name"/>
			<xs:enumeration value="advancedevenmesh-receiver-channel.name"/>
			<xs:enumeration value="amazondynamodb-receiver-channel.name"/>
			<xs:enumeration value="amazoneventbridge-receiver-channel.name"/>
			<xs:enumeration value="amqp-receiver-channel.name"/>
			<xs:enumeration value="anaplan-receiver-channel.name"/>
			<xs:enumeration value="ariba-receiver-channel.name"/>
			<xs:enumeration value="as2-receiver-channel.name"/>
			<xs:enumeration value="as4-receiver-channel.name"/>
			<xs:enumeration value="azurestorage-receiver-channel.name"/>
			<xs:enumeration value="coupa-receiver-channel.name"/>
			<xs:enumeration value="dropbox-receiver-channel.name"/>
			<xs:enumeration value="elster-receiver-channel.name"/>
			<xs:enumeration value="facebook-receiver-channel.name"/>
			<xs:enumeration value="ftp-receiver-channel.name"/>
			<xs:enumeration value="odata-receiver-channel.name"/>
			<xs:enumeration value="http-receiver-channel.name"/>
			<xs:enumeration value="hubspot-receiver-channel.name"/>
			<xs:enumeration value="idoc-receiver-channel.name"/>
			<xs:enumeration value="jdbc-receiver-channel.name"/>
			<xs:enumeration value="jira-receiver-channel.name"/>
			<xs:enumeration value="jms-receiver-channel.name"/>
			<xs:enumeration value="kafka-receiver-channel.name"/>
			<xs:enumeration value="ldap-receiver-channel.name"/>
			<xs:enumeration value="mail-receiver-channel.name"/>
			<xs:enumeration value="mdi-receiver-channel.name"/>
			<xs:enumeration value="microsoft-sharepoint-receiver-channel.name"/>
			<xs:enumeration value="netsuite-receiver-channel.name"/>
			<xs:enumeration value="odc-receiver-channel.name"/>
			<xs:enumeration value="openconnectors-receiver-channel.name"/>
			<xs:enumeration value="processdirect-receiver-channel.name"/>
			<xs:enumeration value="rabbitmq-receiver-channel.name"/>
			<xs:enumeration value="rfc-receiver-channel.name"/>
			<xs:enumeration value="servicenow-receiver-channel.name"/>
			<xs:enumeration value="sftp-receiver-channel.name"/>
			<xs:enumeration value="slack-receiver-channel.name"/>
			<xs:enumeration value="smb-receiver-channel.name"/>
			<xs:enumeration value="snowflake-receiver-channel.name"/>
			<xs:enumeration value="soap-receiver-channel.name"/>
			<xs:enumeration value="splunk-receiver-channel.name"/>
			<xs:enumeration value="successfactors-receiver-channel.name"/>
			<xs:enumeration value="sugarcrm-receiver-channel.name"/>
			<xs:enumeration value="twitter-receiver-channel.name"/>
			<xs:enumeration value="workday-receiver-channel.name"/>
			<xs:enumeration value="xi-receiver-channel.name"/>
			<xs:enumeration value="mapping.name"/>
			<xs:enumeration value="message-mapping.name"/>
			<xs:enumeration value="xslt-mapping.name"/>
			<xs:enumeration value="operation-mapping.name"/>
			<xs:enumeration value="script.name"/>
			<xs:enumeration value="groovy-script.name"/>
			<xs:enumeration value="js-script.name"/>
			<xs:enumeration value="sender.name"/>
			<xs:enumeration value="receiver.name"/>
			<xs:enumeration value="content-modifier.name"/>
			<xs:enumeration value="filter.name"/>
			<xs:enumeration value="xml-validator.name"/>
			<xs:enumeration value="edi-validator.name"/>
			<xs:enumeration value="data-store-operations.name"/>
			<xs:enumeration value="get-data-store-operations.name"/>
			<xs:enumeration value="select-data-store-operations.name"/>
			<xs:enumeration value="delete-data-store-operations.name"/>
			<xs:enumeration value="write-data-store-operations.name"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:group name="schemeGroup">
		<xs:choice>
			<xs:element name="starts-with" type="xs:string"/>
			<xs:element name="ends-with" type="xs:string"/>
			<xs:element name="equals" type="equalsSchemeType"/>
			<xs:element name="regex" type="xs:string"/>
			<xs:element name="not" type="schemeTypeSingle"/>
			<xs:element name="and" type="schemeTypeMultiple"/>
			<xs:element name="or" type="schemeTypeMultiple"/>
		</xs:choice>
	</xs:group>
	
	<xs:complexType name="schemeTypeSingle">
		<xs:group ref="schemeGroup"/>
	</xs:complexType>
	
	<xs:complexType name="schemeTypeMultiple">
		<xs:group ref="schemeGroup" maxOccurs="unbounded"/>
	</xs:complexType>
	
	<xs:complexType name="equalsSchemeType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="ignore-case" use="optional">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="yes"/>
							<xs:enumeration value="no"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- Types for rule UserRoles -->

	<xs:complexType name="allowedUserRolesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="allow" type="nonEmptyString"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="disallowedUserRolesType">
		<xs:complexContent>
			<xs:extension base="baseRuleType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="disallow" type="nonEmptyString"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

</xs:schema>